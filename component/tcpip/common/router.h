//-----------------------------------------------------------------------------
// Copyright (c) 2018, Djyos Open source Development team. All rights reserved.

// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:

// 1. Redistributions of source code must retain the above copyright notice,
//    this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright notice,
//    this list of conditions and the following disclaimer in the documentation
//    and/or other materials provided with the distribution.
// 3. As a constituent part of djyos,do not transplant it to other software
//    without specific prior written permission.

// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.
//-----------------------------------------------------------------------------
// Copyright (c) 2018，著作权由都江堰操作系统开源开发团队所有。著作权人保留一切权利。
//
// 这份授权条款，在使用者符合以下三条件的情形下，授予使用者使用及再散播本
// 软件包装原始码及二进位可执行形式的权利，无论此包装是否经改作皆然：
//
// 1. 对于本软件源代码的再散播，必须保留上述的版权宣告、本条件列表，以
//    及下述的免责声明。
// 2. 对于本套件二进位可执行形式的再散播，必须连带以文件以及／或者其他附
//    于散播包装中的媒介方式，重制上述之版权宣告、本条件列表，以及下述
//    的免责声明。
// 3. 本软件作为都江堰操作系统的组成部分，未获事前取得的书面许可，不允许移植到非
//    都江堰操作系统环境下运行。

// 免责声明：本软件是本软件版权持有人以及贡献者以现状（"as is"）提供，
// 本软件包装不负任何明示或默示之担保责任，包括但不限于就适售性以及特定目
// 的的适用性为默示性担保。版权持有人及本软件之贡献者，无论任何条件、
// 无论成因或任何责任主义、无论此责任为因合约关系、无过失责任主义或因非违
// 约之侵权（包括过失或其他原因等）而起，对于任何因使用本软件包装所产生的
// 任何直接性、间接性、偶发性、特殊性、惩罚性或任何结果的损害（包括但不限
// 于替代商品或劳务之购用、使用损失、资料损失、利益损失、业务中断等等），
// 不负任何责任，即在该种使用已获事前告知可能会造成此类损害的情形下亦然。
//-----------------------------------------------------------------------------

#ifndef TCPIP_ROUT_ROUTER_H_
#define TCPIP_ROUT_ROUTER_H_

#include <sys/socket.h>
#include <osarch.h>

struct RoutItem4;
//功能说明：
//该文件是路由模块，该模块完成的主要为网络层提供出口和入口的匹配机制
//后续的路由防火墙则在该模块实现。
//next hop:in the item,if the host and the dest net is not in the same net, then it will use the
//next hop as the destination,and use the original destination ip as the rout destination
//should do a external function in the net hal to get the device handle and Name
//NULL FOR FAILED
typedef enum
{
    EN_IPTYPE_V4_UNKOWN = 0,
    EN_IPTYPE_V4_ANY,   //0.0.0.0
    EN_IPTYPE_V4_HOST,  //127.0.0.1--不再特殊处理,2020.1.1
    EN_IPTYPE_V4_LOCAL, //the other ip you configure or get dynamic
    EN_IPTYPE_V4_BROAD, //such as 192.168.0.255 or 255.255.255.255
    EN_IPTYPE_V4_SUBNET, //in the subnet
    EN_IPTYPE_V4_MULTI,
}enIPTYPE;



bool_t RouterInit(void);
//routitem is the router internal data structure, should not be exposed to external
//so we make this one
typedef struct
{
    enum_ipv_t       ver;     //调用 RouterMatch 前必须提供
    enIPTYPE         type;    //RouterMatch函数返回结果用
    struct NetDev   *DevFace; //网络设备接口
    void            *DstIP;   //this structure depends on the ver:ipv4 ipv6
    void            *HopIP;   //this structure depends on the ver:ipv4 ipv6
    void            *HostIP;  //this structure depends on the ver:ipv4 ipv6
}tagRoutLink; //you could use this structure to storage the message need in the external
//you could do the decision on the type,if UNKNOWN,which means we could resolve this
//if need more function,you could extend it this structure -- TODO,zhangqf
bool_t RouterSearchHost(struct in_addr host);
bool_t RouterMatch(tagRoutLink *rout);
//if not call, then will not do the loop internal
void RouterSetHost(enum_ipv_t ver,const char *ifname);

#endif /* TCPIP_ROUT_ROUTER_H_ */
