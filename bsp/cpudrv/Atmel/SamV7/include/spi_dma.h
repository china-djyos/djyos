//----------------------------------------------------
// Copyright (c) 2018, Djyos Open source Development team. All rights reserved.

// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:

// 1. Redistributions of source code must retain the above copyright notice,
//    this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright notice,
//    this list of conditions and the following disclaimer in the documentation
//    and/or other materials provided with the distribution.

// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.
//-----------------------------------------------------------------------------
// Copyright (c) 2018，著作权由都江堰操作系统开源开发团队所有。著作权人保留一切权利。
//
// 这份授权条款，在使用者符合下列条件的情形下，授予使用者使用及再散播本
// 软件包装原始码及二进位可执行形式的权利，无论此包装是否经改作皆然：
//
// 1. 对于本软件源代码的再散播，必须保留上述的版权宣告、本条件列表，以
//    及下述的免责声明。
// 2. 对于本套件二进位可执行形式的再散播，必须连带以文件以及／或者其他附
//    于散播包装中的媒介方式，重制上述之版权宣告、本条件列表，以及下述
//    的免责声明。

// 免责声明：本软件是本软件版权持有人以及贡献者以现状（"as is"）提供，
// 本软件包装不负任何明示或默示之担保责任，包括但不限于就适售性以及特定目
// 的的适用性为默示性担保。版权持有人及本软件之贡献者，无论任何条件、
// 无论成因或任何责任主义、无论此责任为因合约关系、无过失责任主义或因非违
// 约之侵权（包括过失或其他原因等）而起，对于任何因使用本软件包装所产生的
// 任何直接性、间接性、偶发性、特殊性、惩罚性或任何结果的损害（包括但不限
// 于替代商品或劳务之购用、使用损失、资料损失、利益损失、业务中断等等），
// 不负任何责任，即在该种使用已获事前告知可能会造成此类损害的情形下亦然。
//-----------------------------------------------------------------------------
// =============================================================================

// 文件名     ：spi_dma.h
// 模块描述: SPI模块，XDMAD与spi驱动中间层
// 模块版本: V1.00
// 创建人员: HM
// 创建时间: 09/11.2015
// =============================================================================

#ifndef __SPI_DMA_H__
#define __SPI_DMA_H__

#include "xdmac.h"

#define SPID_ERROR   1
#define SPID_ERROR_LOCK 2

typedef void (*SpiCallback)( uint8_t, void* ) ;
typedef struct
{
    uint8_t *pBuff;             // Pointer to the Buffer.
    uint32_t BuffSize;          //Buff size in bytes.
    uint32_t ChNum;             //Dma channel num.
    SpiCallback callback;       //Callback function invoked at the end of transfer.
    void *pArgument;            //Callback arguments.
} SpiChannel ;

typedef struct
{
    uint8_t SpiId ;
    Spi* pSpiReg ;
    sXdmad* pXdmad;             // Pointer to DMA driver
    SpiChannel *pRxChannel ;    //Current Rx channel
    SpiChannel *pTxChannel ;    //Current tx channel
    volatile uint8_t sempaphore;//flag to indicate the current transfer.
} SpiDma;


void SPID_DmaIntEnable(Xdmac *pXdmac,u8 iChannel,u32 IntEn);
void SPID_DmaIntDisable(Xdmac *pXdmac,u8 iChannel);
uint32_t SPID_Configure(SpiDma *pSpid);
void SPID_FastConfig(Xdmac *pXdmac,u8 iChannel,u32 sa,u32 da,u32 len);
uint32_t SPID_RxTxStart(SpiDma *pSpid);
uint32_t SPID_RxTxPause( SpiDma *pSpid);
uint32_t SPID_DisableDma(SpiDma* pSpi);


#endif /* SRC_USER_CPUDRV_INCLUDE_SPI_DMA_H_ */
